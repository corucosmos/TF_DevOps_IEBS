services:
  mysql:
    image: mysql:8.0
    container_name: mysql_container
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3306:3306"
    networks:
      - app-network

  backend:
    build: ./backend
    env_file:
      - .env
    container_name: backend_container
    ports:
      - "8000:8000"
    depends_on:
      - mysql
    environment:
      MYSQL_HOST: ${DB_HOST}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_DB: ${DB_NAME}
    volumes:
      - app_data:/app/logs
    networks:
      - app-network
  
  admin-frontend:
    build: ./admin-frontend
    container_name: admin_fronted_container
    ports:
      - "8501:8501"
    depends_on:
      - backend
    environment:
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
    networks:
      - app-network

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    privileged: true
    depends_on:
      -  admin-frontend
    networks:
      - app-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml  
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    restart: unless-stopped
    depends_on:
      - node_exporter  
    networks:
      - app-network
  
  promtail:
    image: grafana/promtail
    container_name: promtail
    volumes:
      - app_data:/app/logs #/var/log/app
      - ./promtail:/etc/promtail
    command: -config.file=/etc/promtail/config.yaml
    depends_on:
      - prometheus  
    networks:
      - app-network
  
  loki:
    image: grafana/loki
    container_name: loki
    ports:
      - 3100:3100
    command: -config.file=/etc/loki/local-config.yaml
    depends_on:
      - promtail 
    networks:
      - app-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    restart: unless-stopped
    depends_on:
      - loki
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data: 
  app_data: {}
  grafana-storage:
